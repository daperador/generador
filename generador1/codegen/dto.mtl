[comment]
/*******************************************************************************
 * 
 * This is a MTL generator template
 * See: 
 * Language Reference: http://help.eclipse.org/juno/topic/org.eclipse.acceleo.doc/pages/reference/language.html?cp=5_3_0
 * Operations: http://help.eclipse.org/juno/topic/org.eclipse.acceleo.doc/pages/reference/operations.html?cp=5_3_2
 * Text production rules: http://help.eclipse.org/juno/topic/org.eclipse.acceleo.doc/pages/reference/textproductionrules.html?cp=5_3_5
 *
 *******************************************************************************
[/comment]
[module dto('http://www.eclipse.org/uml2/4.0.0/UML')/]

[template public generate(c : Class)]
[comment @main/]
[file ('/src/main/java/' + c._package.qualifiedName.replaceAll('::', '/') +'/dto/'+ c.name + 'DTO.java', false, 'UTF-8')]
package [c._package.getQualifiedName().replaceAll('::', '.')/].dto;

[if (c.attribute->exists(a : Property | a.isMany() and a.isOrdered))]
import java.util.List;
import java.util.ArrayList;
[/if]
[if (c.attribute->exists(a : Property | a.type.name='Date'))]
import java.util.Date;
[/if]
[if (c.attribute->exists(a : Property | a.isMany() and not a.isOrdered))]
import java.util.Set;
import java.util.HashSet;
[/if]

/**
* @generated
*/
[c.classHeader()/] {
    [c.attribute.generate()/]
    [c.getAssociations().navigableOwnedEnd->select(type <> c).generate()/]
    [c.attribute.accessors()/]
[if (c.ownedOperation->notEmpty())]

    //                          Operations                                  
    
    [c.ownedOperation.generate()/]
[/if]
}
[/file]
[/template]

[comment Collections /]

[template public generate(a : Property) ? (a.isMany() and a.isOrdered)]

/**
* @generated
*/
private List<[a.type.name/]> [a.name/];

[/template]

[template public generate(a : Property) ? (a.isMany() and not a.isOrdered)]

/**
* @generated
*/
private Set<[a.type.name/]> [a.name/];

[/template]

[comment Single properties /]

[template public generate(a : Property)]

/**
* @generated
*/
[if(a.isAttribute())]private [a.type.name/] [a.name/];
[else]private [a.type.name/]DTO [a.name/];[/if]

[/template]

[comment Accessors for Collection /]


[template public accessors(a : Property) ? (a.isMany() and a.isOrdered)]

/**
* @generated
*/
[a.visibility/] List<[a.type.name/]> get[a.name.toUpperFirst()/]() {
    if (this.[a.name/] == null) {
        this.[a.name/] = new ArrayList<[a.type.name/]>();
    }
    return this.[a.name/];
}

/**
* @generated
*/
[a.visibility/] void set[a.name.toUpperFirst()/]([a.type.name/] [a.name/]) {
    this.[a.name/] = [a.name/];
}

[/template]

[comment Accessors for single element /]

[template public accessors(a : Property)]
[if(a.isAttribute())]
/**
* @generated
*/
[a.visibility/] [a.type.name/] get[a.name.toUpperFirst()/]() {
    return this.[a.name/];
}

/**
* @generated
*/
[a.visibility/] void set[a.name.toUpperFirst()/]([a.type.name/] [a.name/]) {
    this.[a.name/] = [a.name/];
}
[else]
/**
* @generated
*/
[a.visibility/] [a.type.name/]DTO get[a.name.toUpperFirst()/]() {
    return this.[a.name/];
}

/**
* @generated
*/
[a.visibility/] void set[a.name.toUpperFirst()/]([a.type.name/]DTO [a.name/]) {
    this.[a.name/] = [a.name/];
}
[/if]
[/template]


[comment Operations /]

[template public generate(o : Operation)]
/**
* @generated
*/
[o.visibility/] [o.name/]() {
    //TODO
}

[/template]

[template public classHeader(c : Class)]
[c.visibility/] class [c.name/]DTO[c.extendsHeader()/][c.implementsHeader()/]
[/template]

[template public extendsHeader(c : Class) ? (c.superClass->notEmpty())]
 extends [c.superClass.name/]DTO
[/template]

[template public implementsHeader(c : Class) ? (c.interfaceRealization->notEmpty())]
 implements [c.interfaceRealization.supplier.name->sep(', ')/]
[/template]

[query public isMany(s : MultiplicityElement) : Boolean =
	s.lower > 1 or s.upper = -1 or s.upper > 1 
/]
